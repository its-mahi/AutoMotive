{"ast":null,"code":"var _jsxFileName = \"/Users/its_mahi/Desktop/ML Intergration/ml-frontend/src/components/NumberPlateDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './NumberPlateDetection';\nimport LoadingPage from './LoadingPage';\nimport { useUser } from \"@clerk/clerk-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NumberPlateDetection() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [resultVideo, setResultVideo] = useState(null);\n  const [resultCSV, setResultCSV] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    user\n  } = useUser();\n  const userId = user.id;\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"video\", selectedFile);\n    try {\n      const response = await axios.post(\n      // \"http://localhost:4000/upload\",\n      `http://localhost:4000/upload/${userId}`,\n      // \"https://automotive-number-plate-detection.vercel.app/upload\",\n      formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setResultVideo(response.data.video);\n      setResultCSV(response.data.csv); // Assuming your API returns CSV file data\n\n      //   const jsonString_inputvideo = JSON.stringify(selectedFile);\n      //   const base64String_inputvideo = btoa(jsonString_inputvideo);\n\n      //   const jsonString_outputvideo = JSON.stringify(resultVideo);\n      //   const base64String_outputvideo = btoa(jsonString_outputvideo);\n\n      //   console.log(base64String_inputvideo);\n      //   console.log(base64String_outputvideo);\n\n      //   const historyResponse = await axios.post(\n      //     `http://localhost:3001/api/history/${userId}`,\n      //     {\n      //         userId: userId,\n      //         inputVideoUrl: base64String_inputvideo,\n      //         outputVideoUrl: base64String_outputvideo\n      //     },\n      //     {\n      //       headers: {\n      //         'Content-Type': 'application/json'\n      //       },\n      //     }\n      //   );\n\n      //   console.log(\"selected file : \", typeof(selectedFile));\n      //   console.log(\"result file : \", typeof(resultVideo));\n\n      //   console.log(\"History Added : \" + historyResponse)\n    } catch (error) {\n      console.error(\"Error while storing history :\", error);\n    }\n    setLoading(false);\n  };\n  const handleDownloadVideo = () => {\n    const uint8Array = new Uint8Array(atob(resultVideo).split(\"\").map(char => char.charCodeAt(0)));\n    const blob = new Blob([uint8Array], {\n      type: \"video/mp4\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"result_video.mp4\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  const handleDownloadCSV = () => {\n    // Decode the base64 encoded CSV data\n    const decodedData = atob(resultCSV);\n\n    // Convert the decoded data to a Uint8Array\n    const uint8Array = new Uint8Array(decodedData.length);\n    for (let i = 0; i < decodedData.length; i++) {\n      uint8Array[i] = decodedData.charCodeAt(i);\n    }\n\n    // Create a Blob object from the Uint8Array\n    const blob = new Blob([uint8Array], {\n      type: 'text/csv'\n    });\n\n    // Create a URL for the Blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a link element and trigger the download\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'result_data.csv';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading mt-20 font-['Rubik'] font-bold\",\n      children: \"Number Plate Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-['Rubik'] font-bold mt-3 mb-5 text-3xl text-white\",\n        children: \"Browse File to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-white w-100\",\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit\",\n        onClick: handleUpload,\n        className: \"font-['Rubik'] font-bold\",\n        children: \"Detect Number Plates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this), resultVideo && resultCSV && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"sub-heading\",\n        children: \"Download Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadVideo,\n        className: \"download-btn\",\n        children: \"Download Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadCSV,\n        className: \"download-btn\",\n        children: \"Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(NumberPlateDetection, \"GPFkIKDQ2WiD2aqA6j3rkv2Dhiw=\", false, function () {\n  return [useUser];\n});\n_c = NumberPlateDetection;\nexport default NumberPlateDetection;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './NumberPlateDetection.css'\n\n// function NumberPlateDetection() {\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [resultVideo, setResultVideo] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     setSelectedFile(event.target.files[0]);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     formData.append(\"video\", selectedFile);\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:4000/upload\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n\n//       setResultVideo(response.data);\n//     } catch (error) {\n//       console.error(\"Error uploading file:\", error);\n//     }\n//   };\n\n//   const handleDownload = () => {\n//     const uint8Array = new Uint8Array(\n//       atob(resultVideo)\n//         .split(\"\")\n//         .map((char) => char.charCodeAt(0))\n//     );\n//     const blob = new Blob([uint8Array], { type: \"video/mp4\" });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement(\"a\");\n//     a.href = url;\n//     a.download = \"result_video.mp4\";\n//     document.body.appendChild(a);\n//     a.click();\n//     document.body.removeChild(a);\n//   };\n\n// //   const handleDownloadCSV = () => {\n// //     const uint8Array = new Uint8Array(\n// //       atob(resultCSV) // Assuming resultCSV contains the CSV data as a base64 string\n// //         .split(\"\")\n// //         .map((char) => char.charCodeAt(0))\n// //     );\n// //     const blob = new Blob([uint8Array], { type: \"text/csv\" }); // Set the correct MIME type for CSV\n// //     const url = URL.createObjectURL(blob);\n// //     const a = document.createElement(\"a\");\n// //     a.href = url;\n// //     a.download = \"result_data.csv\"; // Set the filename for the downloaded CSV file\n// //     document.body.appendChild(a);\n// //     a.click();\n// //     document.body.removeChild(a);\n// //   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"heading\">Number Plate Detection</h1>\n\n//       <div className=\"upload-box\">\n//         <h3>Browse File to Upload</h3>\n//         <input type=\"file\" onChange={handleFileChange}/>\n//         <br />\n//         <br />\n//         <button id='submit' onClick={handleUpload}>Detect Number Plates</button>\n//       </div>\n\n//       {resultVideo && (\n//         <div className=\"result-section\">\n//           <h4 className=\"sub-heading\">Download  Result Video</h4>\n\n//           <button onClick={handleDownload} className=\"download-btn\">\n//             Download Result\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default NumberPlateDetection;\nvar _c;\n$RefreshReg$(_c, \"NumberPlateDetection\");","map":{"version":3,"names":["React","useState","axios","LoadingPage","useUser","jsxDEV","_jsxDEV","NumberPlateDetection","_s","selectedFile","setSelectedFile","resultVideo","setResultVideo","resultCSV","setResultCSV","loading","setLoading","user","userId","id","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","headers","data","video","csv","error","console","handleDownloadVideo","uint8Array","Uint8Array","atob","split","map","char","charCodeAt","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","handleDownloadCSV","decodedData","length","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/its_mahi/Desktop/ML Intergration/ml-frontend/src/components/NumberPlateDetection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './NumberPlateDetection'\nimport LoadingPage from './LoadingPage';\n\nimport { useUser } from \"@clerk/clerk-react\";\n\n\nfunction NumberPlateDetection() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [resultVideo, setResultVideo] = useState(null);\n  const [resultCSV, setResultCSV] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { user } = useUser();\n\n  const userId = user.id;\n\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"video\", selectedFile);\n\n    try {\n      const response = await axios.post(\n        // \"http://localhost:4000/upload\",\n        `http://localhost:4000/upload/${userId}`,\n        // \"https://automotive-number-plate-detection.vercel.app/upload\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      setResultVideo(response.data.video);\n      setResultCSV(response.data.csv); // Assuming your API returns CSV file data\n\n\n      \n    //   const jsonString_inputvideo = JSON.stringify(selectedFile);\n    //   const base64String_inputvideo = btoa(jsonString_inputvideo);\n      \n    //   const jsonString_outputvideo = JSON.stringify(resultVideo);\n    //   const base64String_outputvideo = btoa(jsonString_outputvideo);\n\n    //   console.log(base64String_inputvideo);\n    //   console.log(base64String_outputvideo);\n\n\n    //   const historyResponse = await axios.post(\n    //     `http://localhost:3001/api/history/${userId}`,\n    //     {\n    //         userId: userId,\n    //         inputVideoUrl: base64String_inputvideo,\n    //         outputVideoUrl: base64String_outputvideo\n    //     },\n    //     {\n    //       headers: {\n    //         'Content-Type': 'application/json'\n    //       },\n    //     }\n    //   );\n\n    //   console.log(\"selected file : \", typeof(selectedFile));\n    //   console.log(\"result file : \", typeof(resultVideo));\n\n    //   console.log(\"History Added : \" + historyResponse)\n\n    } catch (error) {\n      console.error(\"Error while storing history :\", error);\n    }\n    setLoading(false);\n  };\n\n  const handleDownloadVideo = () => {\n    const uint8Array = new Uint8Array(\n      atob(resultVideo)\n        .split(\"\")\n        .map((char) => char.charCodeAt(0))\n    );\n    const blob = new Blob([uint8Array], { type: \"video/mp4\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"result_video.mp4\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  const handleDownloadCSV = () => {\n    // Decode the base64 encoded CSV data\n    const decodedData = atob(resultCSV);\n  \n    // Convert the decoded data to a Uint8Array\n    const uint8Array = new Uint8Array(decodedData.length);\n    for (let i = 0; i < decodedData.length; i++) {\n      uint8Array[i] = decodedData.charCodeAt(i);\n    }\n  \n    // Create a Blob object from the Uint8Array\n    const blob = new Blob([uint8Array], { type: 'text/csv' });\n  \n    // Create a URL for the Blob object\n    const url = URL.createObjectURL(blob);\n  \n    // Create a link element and trigger the download\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'result_data.csv';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  \n\n  return (\n    <div className=\"container\">\n      <h1 className=\"heading mt-20 font-['Rubik'] font-bold\">Number Plate Detection</h1>\n\n      {!loading ? (<div className=\"upload-box\">\n        <h3 className=\"font-['Rubik'] font-bold mt-3 mb-5 text-3xl text-white\">Browse File to Upload</h3>\n        <hr />\n        <div className='mt-10'></div>\n        <input className='text-white w-100' type=\"file\" onChange={handleFileChange}/>\n        <br />\n        <br />\n        <button id='submit' onClick={handleUpload} className=\"font-['Rubik'] font-bold\">Detect Number Plates</button>\n      </div>) : <LoadingPage/>}\n\n      {resultVideo && resultCSV && (\n        <div className=\"result-section\">\n\n          <h4 className=\"sub-heading\">Download Result</h4>\n\n          <button onClick={handleDownloadVideo} className=\"download-btn\">\n            Download Video\n          </button>\n          \n          <br />\n\n          <button onClick={handleDownloadCSV} className=\"download-btn\">\n            Download CSV\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NumberPlateDetection;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './NumberPlateDetection.css'\n\n// function NumberPlateDetection() {\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [resultVideo, setResultVideo] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     setSelectedFile(event.target.files[0]);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     formData.append(\"video\", selectedFile);\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:4000/upload\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n\n//       setResultVideo(response.data);\n//     } catch (error) {\n//       console.error(\"Error uploading file:\", error);\n//     }\n//   };\n\n//   const handleDownload = () => {\n//     const uint8Array = new Uint8Array(\n//       atob(resultVideo)\n//         .split(\"\")\n//         .map((char) => char.charCodeAt(0))\n//     );\n//     const blob = new Blob([uint8Array], { type: \"video/mp4\" });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement(\"a\");\n//     a.href = url;\n//     a.download = \"result_video.mp4\";\n//     document.body.appendChild(a);\n//     a.click();\n//     document.body.removeChild(a);\n//   };\n\n// //   const handleDownloadCSV = () => {\n// //     const uint8Array = new Uint8Array(\n// //       atob(resultCSV) // Assuming resultCSV contains the CSV data as a base64 string\n// //         .split(\"\")\n// //         .map((char) => char.charCodeAt(0))\n// //     );\n// //     const blob = new Blob([uint8Array], { type: \"text/csv\" }); // Set the correct MIME type for CSV\n// //     const url = URL.createObjectURL(blob);\n// //     const a = document.createElement(\"a\");\n// //     a.href = url;\n// //     a.download = \"result_data.csv\"; // Set the filename for the downloaded CSV file\n// //     document.body.appendChild(a);\n// //     a.click();\n// //     document.body.removeChild(a);\n// //   };\n  \n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"heading\">Number Plate Detection</h1>\n\n//       <div className=\"upload-box\">\n//         <h3>Browse File to Upload</h3>\n//         <input type=\"file\" onChange={handleFileChange}/>\n//         <br />\n//         <br />\n//         <button id='submit' onClick={handleUpload}>Detect Number Plates</button>\n//       </div>\n\n//       {resultVideo && (\n//         <div className=\"result-section\">\n//           <h4 className=\"sub-heading\">Download  Result Video</h4>\n\n//           <button onClick={handleDownload} className=\"download-btn\">\n//             Download Result\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default NumberPlateDetection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}