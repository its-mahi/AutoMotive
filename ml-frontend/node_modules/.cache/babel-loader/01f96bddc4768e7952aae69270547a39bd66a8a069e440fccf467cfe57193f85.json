{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport { useClientContext } from \"../contexts/ClientContext\";\nimport { useIsomorphicClerkContext } from \"../contexts/IsomorphicClerkContext\";\nconst useSignIn = () => {\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n  if (!client) {\n    return {\n      isLoaded: false,\n      signIn: void 0,\n      setSession: void 0,\n      setActive: void 0\n    };\n  }\n  return {\n    isLoaded: true,\n    signIn: client.signIn,\n    setSession: isomorphicClerk.setSession,\n    setActive: isomorphicClerk.setActive\n  };\n};\nexport { useSignIn };","map":{"version":3,"names":["useClientContext","useIsomorphicClerkContext","useSignIn","isomorphicClerk","client","isLoaded","signIn","setSession","setActive"],"sources":["/Users/its_mahi/Important/FInal ML Project/ML Intergration/ml-frontend/node_modules/@clerk/clerk-react/src/hooks/useSignIn.ts"],"sourcesContent":["import type { SetActive, SetSession, SignInResource } from '@clerk/types';\n\nimport { useClientContext } from '../contexts/ClientContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\n\ntype UseSignInReturn =\n  | {\n      isLoaded: false;\n      signIn: undefined;\n      /**\n       * @deprecated This method is deprecated and will be removed in the future. Use {@link Clerk.setActive} instead\n       * Set the current session explicitly. Setting the session to `null` unsets the active session and signs out the user.\n       * @param session Passed session resource object, session id (string version) or null\n       * @param beforeEmit Callback run just before the active session is set to the passed object. Can be used to hook up for pre-navigation actions.\n       */\n      setSession: undefined;\n      setActive: undefined;\n    }\n  | {\n      isLoaded: true;\n      signIn: SignInResource;\n      /**\n       * @deprecated This method is deprecated and will be removed in the future. Use {@link Clerk.setActive} instead\n       * Set the current session explicitly. Setting the session to `null` unsets the active session and signs out the user.\n       * @param session Passed session resource object, session id (string version) or null\n       * @param beforeEmit Callback run just before the active session is set to the passed object. Can be used to hook up for pre-navigation actions.\n       */\n      setSession: SetSession;\n      setActive: SetActive;\n    };\n\ntype UseSignIn = () => UseSignInReturn;\n\nexport const useSignIn: UseSignIn = () => {\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n\n  if (!client) {\n    return { isLoaded: false, signIn: undefined, setSession: undefined, setActive: undefined };\n  }\n\n  return {\n    isLoaded: true,\n    signIn: client.signIn,\n    setSession: isomorphicClerk.setSession,\n    setActive: isomorphicClerk.setActive,\n  };\n};\n"],"mappings":";AAEA,SAASA,gBAAA,QAAwB;AACjC,SAASC,yBAAA,QAAiC;AA8BnC,MAAMC,SAAA,GAAuBA,CAAA,KAAM;EACxC,MAAMC,eAAA,GAAkBF,yBAAA,CAA0B;EAClD,MAAMG,MAAA,GAASJ,gBAAA,CAAiB;EAEhC,IAAI,CAACI,MAAA,EAAQ;IACX,OAAO;MAAEC,QAAA,EAAU;MAAOC,MAAA,EAAQ;MAAWC,UAAA,EAAY;MAAWC,SAAA,EAAW;IAAU;EAC3F;EAEA,OAAO;IACLH,QAAA,EAAU;IACVC,MAAA,EAAQF,MAAA,CAAOE,MAAA;IACfC,UAAA,EAAYJ,eAAA,CAAgBI,UAAA;IAC5BC,SAAA,EAAWL,eAAA,CAAgBK;EAC7B;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}