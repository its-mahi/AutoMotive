{"ast":null,"code":"import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nfunction mixImmediate(a, b) {\n  return p => p > 0 ? b : a;\n}\nfunction mixNumber(a, b) {\n  return p => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n  if (typeof a === \"number\") {\n    return mixNumber;\n  } else if (typeof a === \"string\") {\n    return isCSSVariableToken(a) ? mixImmediate : color.test(a) ? mixColor : mixComplex;\n  } else if (Array.isArray(a)) {\n    return mixArray;\n  } else if (typeof a === \"object\") {\n    return color.test(a) ? mixColor : mixObject;\n  }\n  return mixImmediate;\n}\nfunction mixArray(a, b) {\n  const output = [...a];\n  const numValues = output.length;\n  const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n  return p => {\n    for (let i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](p);\n    }\n    return output;\n  };\n}\nfunction mixObject(a, b) {\n  const output = {\n    ...a,\n    ...b\n  };\n  const blendValue = {};\n  for (const key in output) {\n    if (a[key] !== undefined && b[key] !== undefined) {\n      blendValue[key] = getMixer(a[key])(a[key], b[key]);\n    }\n  }\n  return v => {\n    for (const key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n    return output;\n  };\n}\nfunction matchOrder(origin, target) {\n  var _a;\n  const orderedOrigin = [];\n  const pointers = {\n    color: 0,\n    var: 0,\n    number: 0\n  };\n  for (let i = 0; i < target.values.length; i++) {\n    const type = target.types[i];\n    const originIndex = origin.indexes[type][pointers[type]];\n    const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n    orderedOrigin[i] = originValue;\n    pointers[type]++;\n  }\n  return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n  const template = complex.createTransformer(target);\n  const originStats = analyseComplexValue(origin);\n  const targetStats = analyseComplexValue(target);\n  const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length && originStats.indexes.color.length === targetStats.indexes.color.length && originStats.indexes.number.length >= targetStats.indexes.number.length;\n  if (canInterpolate) {\n    return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n  } else {\n    warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n    return mixImmediate(origin, target);\n  }\n};\nexport { getMixer, mixArray, mixComplex, mixObject };","map":{"version":3,"names":["mixNumber","mixNumber$1","mixColor","pipe","warning","color","complex","analyseComplexValue","isCSSVariableToken","mixImmediate","a","b","p","getMixer","test","mixComplex","Array","isArray","mixArray","mixObject","output","numValues","length","blendValue","map","v","i","key","undefined","matchOrder","origin","target","_a","orderedOrigin","pointers","var","number","values","type","types","originIndex","indexes","originValue","template","createTransformer","originStats","targetStats","canInterpolate"],"sources":["/Users/its_mahi/Desktop/ML Intergration/ml-frontend/node_modules/framer-motion/dist/es/utils/mix/complex.mjs"],"sourcesContent":["import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n"],"mappings":"AAAA,SAASA,SAAS,IAAIC,WAAW,QAAQ,cAAc;AACvD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,KAAK,QAAQ,mCAAmC;AACzD,SAASC,OAAO,EAAEC,mBAAmB,QAAQ,qCAAqC;AAClF,SAASC,kBAAkB,QAAQ,4CAA4C;AAE/E,SAASC,YAAYA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACxB,OAAQC,CAAC,IAAMA,CAAC,GAAG,CAAC,GAAGD,CAAC,GAAGD,CAAE;AACjC;AACA,SAASV,SAASA,CAACU,CAAC,EAAEC,CAAC,EAAE;EACrB,OAAQC,CAAC,IAAKX,WAAW,CAACS,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;AACtC;AACA,SAASC,QAAQA,CAACH,CAAC,EAAE;EACjB,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IACvB,OAAOV,SAAS;EACpB,CAAC,MACI,IAAI,OAAOU,CAAC,KAAK,QAAQ,EAAE;IAC5B,OAAOF,kBAAkB,CAACE,CAAC,CAAC,GACtBD,YAAY,GACZJ,KAAK,CAACS,IAAI,CAACJ,CAAC,CAAC,GACTR,QAAQ,GACRa,UAAU;EACxB,CAAC,MACI,IAAIC,KAAK,CAACC,OAAO,CAACP,CAAC,CAAC,EAAE;IACvB,OAAOQ,QAAQ;EACnB,CAAC,MACI,IAAI,OAAOR,CAAC,KAAK,QAAQ,EAAE;IAC5B,OAAOL,KAAK,CAACS,IAAI,CAACJ,CAAC,CAAC,GAAGR,QAAQ,GAAGiB,SAAS;EAC/C;EACA,OAAOV,YAAY;AACvB;AACA,SAASS,QAAQA,CAACR,CAAC,EAAEC,CAAC,EAAE;EACpB,MAAMS,MAAM,GAAG,CAAC,GAAGV,CAAC,CAAC;EACrB,MAAMW,SAAS,GAAGD,MAAM,CAACE,MAAM;EAC/B,MAAMC,UAAU,GAAGb,CAAC,CAACc,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKb,QAAQ,CAACY,CAAC,CAAC,CAACA,CAAC,EAAEd,CAAC,CAACe,CAAC,CAAC,CAAC,CAAC;EACxD,OAAQd,CAAC,IAAK;IACV,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,EAAEK,CAAC,EAAE,EAAE;MAChCN,MAAM,CAACM,CAAC,CAAC,GAAGH,UAAU,CAACG,CAAC,CAAC,CAACd,CAAC,CAAC;IAChC;IACA,OAAOQ,MAAM;EACjB,CAAC;AACL;AACA,SAASD,SAASA,CAACT,CAAC,EAAEC,CAAC,EAAE;EACrB,MAAMS,MAAM,GAAG;IAAE,GAAGV,CAAC;IAAE,GAAGC;EAAE,CAAC;EAC7B,MAAMY,UAAU,GAAG,CAAC,CAAC;EACrB,KAAK,MAAMI,GAAG,IAAIP,MAAM,EAAE;IACtB,IAAIV,CAAC,CAACiB,GAAG,CAAC,KAAKC,SAAS,IAAIjB,CAAC,CAACgB,GAAG,CAAC,KAAKC,SAAS,EAAE;MAC9CL,UAAU,CAACI,GAAG,CAAC,GAAGd,QAAQ,CAACH,CAAC,CAACiB,GAAG,CAAC,CAAC,CAACjB,CAAC,CAACiB,GAAG,CAAC,EAAEhB,CAAC,CAACgB,GAAG,CAAC,CAAC;IACtD;EACJ;EACA,OAAQF,CAAC,IAAK;IACV,KAAK,MAAME,GAAG,IAAIJ,UAAU,EAAE;MAC1BH,MAAM,CAACO,GAAG,CAAC,GAAGJ,UAAU,CAACI,GAAG,CAAC,CAACF,CAAC,CAAC;IACpC;IACA,OAAOL,MAAM;EACjB,CAAC;AACL;AACA,SAASS,UAAUA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAChC,IAAIC,EAAE;EACN,MAAMC,aAAa,GAAG,EAAE;EACxB,MAAMC,QAAQ,GAAG;IAAE7B,KAAK,EAAE,CAAC;IAAE8B,GAAG,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC;EAChD,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,MAAM,CAACM,MAAM,CAACf,MAAM,EAAEI,CAAC,EAAE,EAAE;IAC3C,MAAMY,IAAI,GAAGP,MAAM,CAACQ,KAAK,CAACb,CAAC,CAAC;IAC5B,MAAMc,WAAW,GAAGV,MAAM,CAACW,OAAO,CAACH,IAAI,CAAC,CAACJ,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxD,MAAMI,WAAW,GAAG,CAACV,EAAE,GAAGF,MAAM,CAACO,MAAM,CAACG,WAAW,CAAC,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;IACxFC,aAAa,CAACP,CAAC,CAAC,GAAGgB,WAAW;IAC9BR,QAAQ,CAACI,IAAI,CAAC,EAAE;EACpB;EACA,OAAOL,aAAa;AACxB;AACA,MAAMlB,UAAU,GAAGA,CAACe,MAAM,EAAEC,MAAM,KAAK;EACnC,MAAMY,QAAQ,GAAGrC,OAAO,CAACsC,iBAAiB,CAACb,MAAM,CAAC;EAClD,MAAMc,WAAW,GAAGtC,mBAAmB,CAACuB,MAAM,CAAC;EAC/C,MAAMgB,WAAW,GAAGvC,mBAAmB,CAACwB,MAAM,CAAC;EAC/C,MAAMgB,cAAc,GAAGF,WAAW,CAACJ,OAAO,CAACN,GAAG,CAACb,MAAM,KAAKwB,WAAW,CAACL,OAAO,CAACN,GAAG,CAACb,MAAM,IACpFuB,WAAW,CAACJ,OAAO,CAACpC,KAAK,CAACiB,MAAM,KAAKwB,WAAW,CAACL,OAAO,CAACpC,KAAK,CAACiB,MAAM,IACrEuB,WAAW,CAACJ,OAAO,CAACL,MAAM,CAACd,MAAM,IAAIwB,WAAW,CAACL,OAAO,CAACL,MAAM,CAACd,MAAM;EAC1E,IAAIyB,cAAc,EAAE;IAChB,OAAO5C,IAAI,CAACe,QAAQ,CAACW,UAAU,CAACgB,WAAW,EAAEC,WAAW,CAAC,EAAEA,WAAW,CAACT,MAAM,CAAC,EAAEM,QAAQ,CAAC;EAC7F,CAAC,MACI;IACDvC,OAAO,CAAC,IAAI,EAAG,mBAAkB0B,MAAO,UAASC,MAAO,0KAAyK,CAAC;IAClO,OAAOtB,YAAY,CAACqB,MAAM,EAAEC,MAAM,CAAC;EACvC;AACJ,CAAC;AAED,SAASlB,QAAQ,EAAEK,QAAQ,EAAEH,UAAU,EAAEI,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}